<h1>{{gameName}}</h1>

<div id="symbolNavigation" data-spy="affix"
     data-offset-top="400"
     data-offset-bottom="200">

    <a href="#gameDescription" id="descriptionlink">
        <span class="glyphicon glyphicon-list-alt"></span>
    </a>
    <a href="#gameSetup" id="settingslink">
        <span class="glyphicon glyphicon-cog"></span>
    </a>
    <a href="#statistics" id="statslink">
        <span class="glyphicon glyphicon-stats"></span>
    </a>
    <a href="#mctsgraph" id="mctsgraphlink">
        <span class="glyphicon glyphicon-asterisk"></span>
    </a>
    <a href="#gridWelt" id="gridWeltLink">
        <span class="glyphicon glyphicon-th activeToggle"></span>
    </a>
    <a href="#ensembleInformation" id="ensembleLink">
        <img src="../../img/spoooky-ghost-ensemble.png" alt="Agent Ensemble" />
    </a>

</div>

<!-- ********** -->
<!-- Interfaces -->
<div id="descriptiontoggle" class="glyphicon glyphicon-list-alt"></div>
<div id="settingstoggle" class="glyphicon glyphicon-cog"></div>
<div id="statstoggle" class="glyphicon glyphicon-stats"></div>
<div id="mctsgraphtoggle" class="glyphicon glyphicon-asterisk"></div>


<!-- ******** -->
<!-- Contents -->
<div id="infowrap">

    <!-- **************** -->
    <!-- Game Description -->
    <div id="gameDescription">
        <h4>Spielbeschreibung "{{gameName}}"</h4>
        <div ng-bind-html="gameDescription | unsafe"></div>
    </div>

    <!-- ********** -->
    <!-- Game Setup -->
    <div id="gameSetup">

        <div ng-controller="GameSettingsCtrl">

            <h4>Einstellungen</h4>

            <div class="row">

                <div class="col-lg-5">
                    <div class="input-group input-group-sm">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-user"></span><br />I
                        </span>
                        <input class="form-control" type="text" id="player1name" value="{{player1.name}}" ng-change="changePlayerName(0)" ng-model="player1.name">
                        <select disabled class="form-control" ng-model="playerTypes1.value" ng-change="changePlayerType(0)" ng-options="v for v in playerTypes1.values">
                        </select>
                    </div>
                </div>

                <div class="col-lg-5">
                    <div class="input-group input-group-sm">

                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-user"></span><br />II
                        </span>
                        <input class="form-control" type="text" id="player2name" value="{{player2.name}}" ng-change="changePlayerName(1)" ng-model="player2.name">
                        <select disabled class="form-control" ng-model="playerTypes2.value" ng-change="changePlayerType(1)" ng-options="v for v in playerTypes2.values">
                        </select>

                    </div>
                </div>

                <div class="col-lg-2">
                    <button id="reloadButton" type="button" class="btn btn-primary">Spiel neu starten</button>
                </div>

            </div>

        </div>

    </div>

    <!-- ********************** -->
    <!-- AI charts / statistics -->
    <div id="statistics" ng-controller="StatisticsCtrl">

        <h4>Statistiken zur Entscheidungsfindung</h4>
        Die folgenden Linien- und Balkendiagramme veranschaulichen die Performanz der
        Entscheidungsfindung der Meta Agenten in jeder Runde des Spiels.
        Das Liniendiagramm repräsentiert die Summe der Spiele, die von allen Agenten des Ensembles simuliert wurden (Rollouts);
        die Anzahl der Simulationsschritte, die von den Agenten ausgeführt wurden, um die simulierten Spiele zu terminalen Zuständen
        zu führen, ist als Balkendiagramm dargestellt.


        <div class="statsContent" create-charts-if-finished
             ng-repeat="agent in metaAgents track by agent.ID">

            <h5>Meta Agent ID {{agent.ID}}</h5>
            <div id="chart-{{agent.ID}}"></div>

        </div>
    </div>

    <!-- *************** -->
    <!-- MCTS Graph View -->
    <div id="mctsgraph" ng-controller="MCTSGraphCtrl">

        <h4>Monte Carlo Spielbaumsuchläufe</h4>
        Mit den dynamisch generierten Graphen dieses Dialoges ist die Entscheidungsfindung der individuierten Agenten des Ensembles anhand der Monte Carlo Spielbaumsuche visualisiert.
         Dargestellt sind die Betrachtungswege vom obersten Knoten - dem Entscheidungsknoten - bis hin zu den <span style="color: #26ab2f">grün</span> eingefärbten terminalen Knoten der Spielbaumsuche.
         Innerhalb der Darstellungen lässt sich mit gehaltener linker Mousetaste oder per Touchevent navigieren; mit dem Mouserad oder der Vergrößerungsgeste lassen sich
         die Graphdarstellungen vergrößern und verkleinern. Elternknoten lassen sich mit einem Klick oder Touchevent reduzieren bzw. auffächern.
        <br />
        Die Farbintensität der jeweiligen Knoten zeigt die Besuchshäufigkeit an: <span style="color: #68b9f8">Hell eingefärbte Knoten</span> wurden im Rahmen der Monte Carlo Spielbaumsuche selten - und
        <span style="color: #005faa">dunkle Knoten</span> häufig besucht. Jeder Knoten informiert über den aktuellen Spieler, den gewählten Zug,
        die Gewinnhäufigkeit sowie die ganzzahlige Anzahl der Besuche.

        <div id="graphs"></div>

    </div>

</div>

<script>

    // *** Initialize Interfaces ***
    $(document).ready(function() {

        // The game header uses the browsers local storage
        // (HTML5, IE >= 8, Firefox >= 3.5, Safari >=4, Chrome >= 4, ...)
        // to persistently save and determine previously shown interface elements

        // Initialize: Show previously shown Interfaces / Dialogs ***** //
        var interfaces = [
            "#gameDescription",
            "#gameSetup",
            "#statistics",
            "#mctsgraph"
        ];
        var cur;

        for (var i = 0; i < interfaces.length; i++) {

            cur = interfaces[i];
            if (localStorage[cur]) {
                $(cur).show();
            } else {
                $(cur).hide();
            }
        }

        // Highlight (active) toggle icons
        if ($("#gameDescription").is(":visible")) {
            $("#descriptiontoggle").addClass("activeToggle");
            $("#descriptionlink").addClass("activeToggle");
        }

        if ($("#gameSetup").is(":visible")) {
            $("#settingstoggle").addClass("activeToggle");
            $("#settingslink").addClass("activeToggle");
        }

        if ($("#statistics").is(":visible")) {
            $("#statstoggle").addClass("activeToggle");
            $("#statslink").addClass("activeToggle");
        }

        if ($("#mctsgraph").is(":visible")) {
            $("#mctsgraphtoggle").addClass("activeToggle");
            $("#mctsgraphlink").addClass("activeToggle");
        }

        // Define Toggles
        $("#descriptiontoggle").click(function(e) {

            if (!$("#gameDescription").is(":visible")) {

                localStorage["#gameDescription"] = true;
                $("#descriptiontoggle").addClass("activeToggle");
                $("#descriptionlink").addClass("activeToggle");
            } else {

                localStorage.removeItem("#gameDescription");
                $("#descriptiontoggle").removeClass("activeToggle");
                $("#descriptionlink").removeClass("activeToggle");
            }
            $("#gameDescription").slideToggle("slow", function() {});
        });

        $("#descriptionlink").click(function(e) {

            if (!$("#gameDescription").is(":visible")) {

                $("#gameDescription").slideDown("slow", function() {});
                localStorage["#gameDescription"] = true;
                $("#descriptiontoggle").addClass("activeToggle");
                $("#descriptionlink").addClass("activeToggle");
            }
        });

        $("#settingstoggle").click(function() {

            if (!$("#gameSetup").is(":visible")) {

                localStorage["#gameSetup"] = true;
                $("#settingstoggle").addClass("activeToggle");
                $("#settingslink").addClass("activeToggle");
            } else {

                localStorage.removeItem("#gameSetup");
                $("#settingstoggle").removeClass("activeToggle");
                $("#settingslink").removeClass("activeToggle");
            }
            $("#gameSetup").slideToggle("slow", function() {});
        });

        $("#settingslink").click(function() {

            if (!$("#gameSetup").is(":visible")) {

                $("#gameSetup").slideDown("slow", function() {});
                localStorage["#gameSetup"] = true;
                $("#settingstoggle").addClass("activeToggle");
                $("#settingslink").addClass("activeToggle");
            }
        });

        $("#statstoggle").click(function() {

            if (!$("#statistics").is(":visible")) {

                localStorage["#statistics"] = true;
                $("#statstoggle").addClass("activeToggle");
                $("#statslink").addClass("activeToggle");
            } else {

                localStorage.removeItem("#statistics");
                $("#statstoggle").removeClass("activeToggle");
                $("#statslink").removeClass("activeToggle");
            }
            $("#statistics").slideToggle("slow", function() {});
        });

        $("#statslink").click(function() {

            if (!$("#statistics").is(":visible")) {

                $("#statistics").slideDown("slow", function() {});
                localStorage["#statistics"] = true;
                $("#statstoggle").addClass("activeToggle");
                $("#statslink").addClass("activeToggle");
            }
        });

        $("#mctsgraphtoggle").click(function() {

            if (!$("#mctsgraph").is(":visible")) {
                localStorage["#mctsgraph"] = true;
                $("#mctsgraphtoggle").addClass("activeToggle");
                $("#mctsgraphlink").addClass("activeToggle");
            } else {
                localStorage.removeItem("#mctsgraph");
                $("#mctsgraphtoggle").removeClass("activeToggle");
                $("#mctsgraphlink").removeClass("activeToggle");
            }
            $("#mctsgraph").slideToggle("slow", function() {});
        });

        $("#mctsgraphlink").click(function() {

            if (!$("#mctsgraph").is(":visible")) {

                $("#mctsgraph").slideDown("slow", function() {});
                localStorage["#mctsgraph"] = true;
                $("#mctsgraphtoggle").addClass("activeToggle");
                $("#mctsgraphlink").addClass("activeToggle");
            }
        });

        $("#reloadButton").click(function() {
            location.reload();
        });

        // *** Left Navigation Bar ***

        // Initialize

        $('#symbolNavigation').affix({
            offset: {
                top: 100
                , bottom: function () {
                    return (this.bottom = $('#footer').outerHeight(true))
                }
            }
        });

        function scrollNav() {
            $("#symbolNavigation a").click(function(){

                //Animate
                $("html, body").stop().animate({
                    scrollTop: $( $(this).attr("href") ).offset().top - 160
                }, 700);
                return false;
            });
            $('.scrollTop a').scrollTop();
        }
        scrollNav();

        // Set the height of game process and agent log interface
        var height = $("#gameGrid").height();

        // Set the maximum height of the game process container
        $("#gameProcess").css("height", height/2-3);
        $("#gameProcess").css("max-height", height/2-3);

        $("#gameProcess .output").css("height", height/2-$("#gameProcess h4").height()-40);
        $("#gameProcess .output").css("max-height", height/2-$("#gameProcess h4").height()-40);

        // Set the maximum width of the game agent log container
        $("#agentLog").css("height", height/2-2);
        $("#agentLog").css("max-height", height/2-2);

        $("#agentLog .output").css("height", height/2-$("#agentLog h4").height()-40);
        $("#agentLog .output").css("max-height", height/2-$("#agentLog h4").height()-40);

        // Activate Tooltips
        $(".ensembleTooltip").tooltip();

    });

</script>